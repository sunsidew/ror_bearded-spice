# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).
#
# Examples:
#
Product.delete_all
Product.create([{ title: '프로그래머로 산다는 것',
				  description: %{「사람과 프로그래머」 제3권 『프로그래머로 산다는 것』. 로드북의 《사람과 프로그래머》시리즈는 기술이 만들어내는 세상이 아닌 사람이 만들어내는 세상을 바라는 마음에서 기획되었다. 즉, 기술보다는 ‘사람’에 포커스를 둔 이 책은 행복한 프로그래머가 되기 위한 저자들의 선택과 실패담을 담고 있다. 취업을 고민하고 있는 독자라면 프로그래머에게 필요한 기술 요소와 비기술 요소에 대한 정보를 얻을 수 있으며 경력 관리를 고민 중인 독자라면 프로그래머 내의 다양한 직군 정보를 얻을 수 있다. 조직과 사람 간의 문제를 고민하고 있는 독자라면 조직의 변화를 위해 설득하고 적용하고 피드백을 받으며 변화시킨 경험에서 영감을 얻을 수 있을 것이다.},
				  image_url: 'programmer.jpg',
				  price: 14800}, 
				{ title: 'Git, 분산 버전 관리 시스템',
				  description: %{네트워크가 다운되어도 소스코드의 변경 이력을 확인할 수 있다면? 분산 버전 관리 시스템(DVCS)인 Git은 네트워크 없이도 버전 관리 시스템을 사용할 수 있다는 장점 덕에 리눅스 커널, 안드로이드, jQuery, 루비온레일스 등 여러 프로젝트의 버전 관리 시스템으로 채택되고 있다. 간단한 HTML 코드를 작성한 후 이 코드를 직접 관리하는 방식으로 Git의 기본적인 사용법을 알려준다. 이 과정에서 분산형(distributed) 버전 관리 시스템의 장점을 스스로 느낄 수 있다. 또한 팀에서는 기존 시스템을 유지하면서도 개인적으로 Git을 적용할 수 있는 방법도 설명한다. 이제 무선랜이 잡히지 않는 카페에서도, 지하철이나 버스 안에서도, 코드 변경 내역을 확인하고 버그를 안전하게 수정할 수 있다.},
				  image_url: 'git.jpg',
				  price: 20000},
				{ title: '레일스와 함께하는 애자일 웹 개발',
				  description: %{루비 온 레일스는 생산성이 뛰어난 웹 애플리케이션 개발 프레임워크다. 완전한 스택을 갖춘 MVC 프레임워크이므로 구조화된 애플리케이션을 만드는 데 효율적이다. 개발자는 애플리케이션에만 집중하면 되고 번거로운 단순 반복 작업은 레일스가 처리하는 특징은 많은 개발자의 환영을 받았다. 특히 웹 2.0 바람과 함께 주목받은 레일스는 반짝 인기에 안주하지 않고 끊임없이 개선되고 있다. 이 책은 그러한 레일스의 최근 변화와 기술 경향을 다룬 책으로 레일스 자체의 발전뿐 아니라 변화한 웹 개발 환경과 모범 사례를 반영하고 더욱 풍성해진 레일스 생태계의 모습을 안내하고 있다.},
				  image_url: 'rails.jpg',
				  price: 34000},
				{ title: '소프트웨어 프로그래머가 알아야 할 97가지',
				  description: %{이 땅의 모든 프로그래머에게 전하는 현장의 지혜를 담은 107가지 의미있는 이야기가 담긴 책. 다양한 프로그래머들의 지혜와 경험의 목소리를 담은 책으로, 모든 프로그래머가 알아야 하는 것의 큰 그림으로서 크라우드 소싱 모자이크로 구성된 내용에서는 코드에 대한 조언에서 문화까지, 알고리즘의 사용에서 애자일적 생각까지, 구현 노하우에서 전문성까지, 그리고 스타일에서 본질까지 다룬다.},
				  image_url: 'soft97.jpg',
				  price: 20000}])
#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])
#   Mayor.create(name: 'Emanuel', city: cities.first)
